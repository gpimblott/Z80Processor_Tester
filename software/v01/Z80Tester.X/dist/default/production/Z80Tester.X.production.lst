

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Sep 04 17:27:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F690
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F690 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001C                     	;# 
    75  001D                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  0087                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  008F                     	;# 
    86  0090                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0093                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0095                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  0115                     	;# 
   109  0116                     	;# 
   110  0118                     	;# 
   111  0119                     	;# 
   112  011A                     	;# 
   113  011B                     	;# 
   114  011E                     	;# 
   115  011F                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  019D                     	;# 
   119  019E                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  008F                     	;# 
   159  0090                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0093                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0095                     	;# 
   167  0096                     	;# 
   168  0096                     	;# 
   169  0097                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009B                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  010C                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  0115                     	;# 
   182  0116                     	;# 
   183  0118                     	;# 
   184  0119                     	;# 
   185  011A                     	;# 
   186  011B                     	;# 
   187  011E                     	;# 
   188  011F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  019D                     	;# 
   192  019E                     	;# 
   193                           
   194                           	psect	idataCOMMON
   195  07B4                     __pidataCOMMON:
   196                           
   197                           ;initializer for _clockOn
   198  07B4  3401               	retlw	1
   199  0007                     _PORTC	set	7
   200  000B                     _INTCON	set	11
   201  0017                     _CCP1CON	set	23
   202  001F                     _ADCON0bits	set	31
   203  001F                     _ADCON0	set	31
   204  0039                     _RC1	set	57
   205  0038                     _RC0	set	56
   206  0087                     _TRISC	set	135
   207  0086                     _TRISBbits	set	134
   208  0085                     _TRISA	set	133
   209  009F                     _ADCON1	set	159
   210  011F                     _ANSELH	set	287
   211  011E                     _ANSEL	set	286
   212  011B                     _CM2CON1	set	283
   213  011A                     _CM2CON0	set	282
   214  0119                     _CM1CON0	set	281
   215  08AC                     _WPUB4	set	2220
   216                           
   217                           	psect	cinit
   218  07F9                     start_initialization:	
   219                           ; #config settings
   220                           
   221  07F9                     __initialization:
   222                           
   223                           ; Initialize objects allocated to COMMON
   224  07F9  118A  27B4  118A   	fcall	__pidataCOMMON	;fetch initializer
   225  07FC  00F6               	movwf	__pdataCOMMON& (0+127)
   226  07FD                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229  07FD                     __end_of__initialization:
   230  07FD  0183               	clrf	3
   231  07FE  118A  2FB5         	ljmp	_main	;jump to C main() function
   232                           
   233                           	psect	dataCOMMON
   234  0076                     __pdataCOMMON:
   235  0076                     _clockOn:
   236  0076                     	ds	1
   237                           
   238                           	psect	cstackCOMMON
   239  0070                     __pcstackCOMMON:
   240  0070                     ?_initHW:
   241  0070                     ??_initHW:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_main:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     main@argc:	
   248                           ; 2 bytes @ 0x0
   249                           
   250                           
   251                           ; 2 bytes @ 0x0
   252  0070                     	ds	2
   253  0072                     main@argv:
   254                           
   255                           ; 2 bytes @ 0x2
   256  0072                     	ds	2
   257  0074                     ??_main:
   258                           
   259                           ; 1 bytes @ 0x4
   260  0074                     	ds	2
   261                           
   262                           	psect	maintext
   263  07B5                     __pmaintext:	
   264 ;;
   265 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   266 ;;
   267 ;; *************** function _main *****************
   268 ;; Defined at:
   269 ;;		line 85 in file "Z80Tester.c"
   270 ;; Parameters:    Size  Location     Type
   271 ;;  argc            2    0[COMMON] int 
   272 ;;  argv            2    2[COMMON] PTR PTR unsigned char 
   273 ;; Auto vars:     Size  Location     Type
   274 ;;		None
   275 ;; Return value:  Size  Location     Type
   276 ;;                  2    0[COMMON] int 
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0, pclath, cstack
   279 ;; Tracked objects:
   280 ;;		On entry : B00/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   284 ;;      Params:         4       0       0       0
   285 ;;      Locals:         0       0       0       0
   286 ;;      Temps:          2       0       0       0
   287 ;;      Totals:         6       0       0       0
   288 ;;Total ram usage:        6 bytes
   289 ;; Hardware stack levels required when called:    1
   290 ;; This function calls:
   291 ;;		_initHW
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           
   298                           ;psect for function _main
   299  07B5                     _main:
   300  07B5                     l663:	
   301                           ;incstack = 0
   302                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   303                           
   304                           
   305                           ;Z80Tester.c: 86:     initHW();
   306  07B5  118A  27D5  118A   	fcall	_initHW
   307  07B8                     l665:
   308                           
   309                           ;Z80Tester.c: 90:         PORTC = 0b00000001;
   310  07B8  3001               	movlw	1
   311  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   312  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   313  07BB  0087               	movwf	7	;volatile
   314  07BC                     l667:
   315                           
   316                           ;Z80Tester.c: 91:         _delay((unsigned long)((10)*(8000000/4000.0)));
   317  07BC  301A               	movlw	26
   318  07BD  00F5               	movwf	??_main+1
   319  07BE  30F8               	movlw	248
   320  07BF  00F4               	movwf	??_main
   321  07C0                     u17:
   322  07C0  0BF4               	decfsz	??_main,f
   323  07C1  2FC0               	goto	u17
   324  07C2  0BF5               	decfsz	??_main+1,f
   325  07C3  2FC0               	goto	u17
   326  07C4  0000               	nop
   327  07C5                     l669:
   328                           
   329                           ;Z80Tester.c: 92:         PORTC = 0b00000010;
   330  07C5  3002               	movlw	2
   331  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   332  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   333  07C8  0087               	movwf	7	;volatile
   334  07C9                     l671:
   335                           
   336                           ;Z80Tester.c: 93:         _delay((unsigned long)((10)*(8000000/4000.0)));
   337  07C9  301A               	movlw	26
   338  07CA  00F5               	movwf	??_main+1
   339  07CB  30F8               	movlw	248
   340  07CC  00F4               	movwf	??_main
   341  07CD                     u27:
   342  07CD  0BF4               	decfsz	??_main,f
   343  07CE  2FCD               	goto	u27
   344  07CF  0BF5               	decfsz	??_main+1,f
   345  07D0  2FCD               	goto	u27
   346  07D1  0000               	nop
   347  07D2  2FB8               	goto	l665
   348  07D3  118A  2800         	ljmp	start
   349  07D5                     __end_of_main:
   350                           
   351                           	psect	text1
   352  07D5                     __ptext1:	
   353 ;; *************** function _initHW *****************
   354 ;; Defined at:
   355 ;;		line 28 in file "Z80Tester.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		status,2
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   369 ;;      Params:         0       0       0       0
   370 ;;      Locals:         0       0       0       0
   371 ;;      Temps:          0       0       0       0
   372 ;;      Totals:         0       0       0       0
   373 ;;Total ram usage:        0 bytes
   374 ;; Hardware stack levels used:    1
   375 ;; This function calls:
   376 ;;		Nothing
   377 ;; This function is called by:
   378 ;;		_main
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           
   383                           ;psect for function _initHW
   384  07D5                     _initHW:
   385  07D5                     l641:	
   386                           ;incstack = 0
   387                           ; Regs used in _initHW: [status,2]
   388                           
   389                           
   390                           ;Z80Tester.c: 29:     ADCON0 = 0x00;
   391  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   392  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   393  07D7  019F               	clrf	31	;volatile
   394                           
   395                           ;Z80Tester.c: 30:     ADCON1 = 0x00;
   396  07D8  1683               	bsf	3,5	;RP0=1, select bank1
   397  07D9  1303               	bcf	3,6	;RP1=0, select bank1
   398  07DA  019F               	clrf	31	;volatile
   399  07DB                     l643:
   400                           
   401                           ;Z80Tester.c: 32:     ADCON0bits.ADON = 0;
   402  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   403  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   404  07DD  101F               	bcf	31,0	;volatile
   405                           
   406                           ;Z80Tester.c: 34:     CM1CON0 = 0x00;
   407  07DE  1283               	bcf	3,5	;RP0=0, select bank2
   408  07DF  1703               	bsf	3,6	;RP1=1, select bank2
   409  07E0  0199               	clrf	25	;volatile
   410                           
   411                           ;Z80Tester.c: 35:     CM2CON0 = 0x00;
   412  07E1  019A               	clrf	26	;volatile
   413                           
   414                           ;Z80Tester.c: 36:     CM2CON1 = 0x00;
   415  07E2  019B               	clrf	27	;volatile
   416                           
   417                           ;Z80Tester.c: 38:     CCP1CON = 0x00;
   418  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   419  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   420  07E5  0197               	clrf	23	;volatile
   421                           
   422                           ;Z80Tester.c: 40:     INTCON = 0x0;
   423  07E6  018B               	clrf	11	;volatile
   424                           
   425                           ;Z80Tester.c: 46:     ANSEL = 0x0;
   426  07E7  1283               	bcf	3,5	;RP0=0, select bank2
   427  07E8  1703               	bsf	3,6	;RP1=1, select bank2
   428  07E9  019E               	clrf	30	;volatile
   429                           
   430                           ;Z80Tester.c: 47:     ANSELH = 0x0;
   431  07EA  019F               	clrf	31	;volatile
   432                           
   433                           ;Z80Tester.c: 59:     TRISA = 0b00000000;
   434  07EB  1683               	bsf	3,5	;RP0=1, select bank1
   435  07EC  1303               	bcf	3,6	;RP1=0, select bank1
   436  07ED  0185               	clrf	5	;volatile
   437  07EE                     l645:
   438                           
   439                           ;Z80Tester.c: 62:     TRISBbits.TRISB4 = 1;
   440  07EE  1606               	bsf	6,4	;volatile
   441                           
   442                           ;Z80Tester.c: 64:     TRISC = 0b00000000;
   443  07EF  0187               	clrf	7	;volatile
   444  07F0                     l647:
   445                           
   446                           ;Z80Tester.c: 69:     WPUB4 = 1;
   447  07F0  1283               	bcf	3,5	;RP0=0, select bank2
   448  07F1  1703               	bsf	3,6	;RP1=1, select bank2
   449  07F2  1615               	bsf	21,4	;volatile
   450                           
   451                           ;Z80Tester.c: 74:     PORTC &= 0b00000000;
   452  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   453  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   454  07F5  0187               	clrf	7	;volatile
   455  07F6                     l649:
   456                           
   457                           ;Z80Tester.c: 76:     RC0 = 0;
   458  07F6  1007               	bcf	7,0	;volatile
   459  07F7                     l651:
   460                           
   461                           ;Z80Tester.c: 77:     RC1 = 0;
   462  07F7  1087               	bcf	7,1	;volatile
   463  07F8                     l39:
   464  07F8  0008               	return
   465  07F9                     __end_of_initHW:
   466  007E                     btemp	set	126	;btemp
   467  007E                     wtemp0	set	126
   468                           
   469                           	psect	config
   470                           
   471                           ;Config register CONFIG @ 0x2007
   472                           ;	Oscillator Selection bits
   473                           ;	FOSC = EXTRCCLK, RC oscillator: CLKOUT function on RA4/OSC2/CLKOUT pin, RC on RA5/OSC1
      +                          /CLKIN
   474                           ;	Watchdog Timer Enable bit
   475                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   476                           ;	Power-up Timer Enable bit
   477                           ;	PWRTE = OFF, PWRT disabled
   478                           ;	MCLR Pin Function Select bit
   479                           ;	MCLRE = ON, MCLR pin function is MCLR
   480                           ;	Code Protection bit
   481                           ;	CP = OFF, Program memory code protection is disabled
   482                           ;	Data Code Protection bit
   483                           ;	CPD = OFF, Data memory code protection is disabled
   484                           ;	Brown-out Reset Selection bits
   485                           ;	BOREN = ON, BOR enabled
   486                           ;	Internal External Switchover bit
   487                           ;	IESO = ON, Internal External Switchover mode is enabled
   488                           ;	Fail-Safe Clock Monitor Enabled bit
   489                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   490  2007                     	org	8199
   491  2007  3FF7               	dw	16375

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     2      4       0
                                              0 COMMON     6     2      4
                             _initHW
 ---------------------------------------------------------------------------------
 (1) _initHW                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initHW

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       7       1       50.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       7      10        0.0%
ABS                  0      0       7       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Sep 04 17:27:44 2021

                     l39 07F8                       u17 07C0                       u27 07CD  
                    l641 07D5                      l651 07F7                      l643 07DB  
                    l645 07EE                      l647 07F0                      l671 07C9  
                    l663 07B5                      l649 07F6                      l665 07B8  
                    l667 07BC                      l669 07C5                      _RC0 0038  
                    _RC1 0039                     _main 07B5                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 011E  
                  _PORTC 0007                    _TRISA 0085                    _TRISC 0087  
                  _WPUB4 08AC                    status 0003                    wtemp0 007E  
        __initialization 07F9             __end_of_main 07D5                   ??_main 0074  
                 _ADCON0 001F                   _ADCON1 009F                   _ANSELH 011F  
                 _INTCON 000B                   _initHW 07D5             __pdataCOMMON 0076  
__end_of__initialization 07FD           __pcstackCOMMON 0070               __pmaintext 07B5  
                _CM1CON0 0119                  _CM2CON0 011A                  _CCP1CON 0017  
                _CM2CON1 011B                  ?_initHW 0070          __size_of_initHW 0024  
                _clockOn 0076                  __ptext1 07D5     end_of_initialization 07FD  
              _TRISBbits 0086            __pidataCOMMON 07B4           __end_of_initHW 07F9  
    start_initialization 07F9                 ??_initHW 0070                ___latbits 0001  
             _ADCON0bits 001F            __size_of_main 0020                 main@argc 0070  
               main@argv 0072  
